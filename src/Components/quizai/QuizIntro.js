import React, { useState, useEffect } from 'react';
import './QuizIntro.css';
import { useNavigate } from 'react-router-dom';

const QuizIntro = () => {
  const [quizTopic, setQuizTopic] = useState('');
  const [difficulty, setDifficulty] = useState('easy');
  const [isDisclaimerVisible, setIsDisclaimerVisible] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    // This effect can be used to trigger any additional actions when the disclaimer appears
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log('Quiz Topic:', quizTopic);
    console.log('Difficulty:', difficulty);
    navigate('/AI', { state: { AIQuizTopic: quizTopic, Difficulty: difficulty } });
  };

  const closeDisclaimer = () => {
    setIsDisclaimerVisible(false);
  };

  return (
    <div className='FRM-Quiz-Intro'>
      {isDisclaimerVisible && (
        <div className="disclaimer-popup">
          <div className="disclaimer-content">
            <button className="disclaimer-close-button" onClick={closeDisclaimer}>Ã—</button>
            <h2 style={{ fontSize: '30px' }}>What does this component do? or otherwise Notes</h2>
            <p>1.Ask the user for what topic they prefer for the quiz and its difficulty level</p>
            <p>2.The question and their respective 4 options and the correctoption is generated by an Intelligence(GEMINI)</p>
            <p>3.The user is supposed to answer the question from the 4 option that is given</p>
            <p>4.The answer is verified after clicking submit btn by comparing them to the correct option</p>
            <p>5.It will display the correct answer and wrong answer based on your selection and calculate your marks</p>
            <p>6.After Completion it will display you performance</p>
          </div>
        </div>
      )}
      <div className="FRM-container">
        <form onSubmit={handleSubmit} className="FRM-form">
          <div className="FRM-form-group">
            <label htmlFor="quizTopic" className="FRM-label">Quiz Topic:</label>
            <input
              type="text"
              id="quizTopic"
              className="FRM-input"
              value={quizTopic}
              onChange={(e) => setQuizTopic(e.target.value)}
            />
          </div>
          <div className="FRM-form-group">
            <label htmlFor="difficulty" className="FRM-label">Difficulty:</label>
            <select
              id="difficulty"
              className="FRM-select"
              value={difficulty}
              onChange={(e) => setDifficulty(e.target.value)}
            >
              <option value="easy">Easy</option>
              <option value="medium">Medium</option>
              <option value="hard">Hard</option>
            </select>
          </div>
          <button type="submit" className="FRM-button">Submit</button>
        </form>
      </div>
    </div>
  );
};

export default QuizIntro;
